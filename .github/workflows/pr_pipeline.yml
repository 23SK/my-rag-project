name: PR Pipeline

on:
  pull_request:
    branches:
      - develop
      
jobs:

  unit-testing:
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Check repository
        run: |
          if [[ "${{ github.repository }}" == "Azure/llmops-project-template" ]]; then
            echo "This workflow is disabled for llmops-project repository."
            exit 0
          fi            
      - uses: actions/checkout@v4
      - name: Setup Python 
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
      # Install pip, pytest and project dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          pip install -r requirements.txt
      - name: Test with pytest
        env:
          PYTHONPATH: src
          PYTHONWARNINGS: ignore::DeprecationWarning,ignore::RemovedInMarshmallow4Warning
        run: pytest tests/ --doctest-modules --junitxml=junit/test-results-3.11.xml
      - name: Upload pytest test results
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results-3.11
          path: junit/test-results-3.11.xml
        if: always()

  static-code-analysis:
    needs: unit-testing
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Finds anti-patterns in code
        run: |
          echo "Run Pylint"
      - name: Run security checks
        run: |
          echo "Run Bandit"

  provision-llm-model:
    needs: static-code-analysis
    runs-on: ubuntu-latest
    environment: dev
    env:
      AZURE_ENV_NAME: ${{ vars.AZURE_ENV_NAME }}
      AZURE_LOCATION: ${{ vars.AZURE_LOCATION }}
      AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install azd
        uses: Azure/setup-azd@v1.0.0
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: azd Login
        run: |
          info=$(echo $AZURE_CREDENTIALS | jq -r '.')
          echo "::add-mask::$(echo $info | jq -r '.clientSecret')"
          azd auth login \
            --client-id "$(echo $info | jq -r '.clientId')" \
            --client-secret "$(echo $info | jq -r '.clientSecret')" \
            --tenant-id "$(echo $info | jq -r '.tenantId')"
        shell: bash
        env:
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}

      - name: az Login
        run: |
          info=$(echo $AZURE_CREDENTIALS | jq -r '.')
          echo "::add-mask::$(echo $info | jq -r '.clientSecret')"
          az login \
            --service-principal \
            --username "$(echo $info | jq -r '.clientId')" \
            --password "$(echo $info | jq -r '.clientSecret')" \
            --tenant "$(echo $info | jq -r '.tenantId')"
        shell: bash
        env:
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set az account
        uses: azure/CLI@v2
        with:
          inlineScript: |
            az account set --subscription ${{env.AZURE_SUBSCRIPTION_ID}}
          
      - name: Provision Infrastructure
        run: azd provision --no-prompt
        env:
          AZURE_ENV_NAME: ${{ vars.AZURE_ENV_NAME }}
          AZURE_LOCATION: ${{ vars.AZURE_LOCATION }}
          AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      
      - name: GitHub Summary Step
        if: ${{ success() }}
        run: |
          deep_link=https://portal.azure.com/#@/resource/subscriptions/${{ env.AZURE_SUBSCRIPTION_ID }}/resourceGroups/rg-${{ vars.AZURE_ENV_NAME }}/overview
          echo "ðŸ”— [View Resources Deployed Here]($deep_link)" >> $GITHUB_STEP_SUMMARY

  evaluate-flow:
    needs: provision-llm-model
    if: ${{ needs.provision.result == 'success' }}
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: AI-Based Flow evaluation
        run: |
          echo "Run AI-Based Flow evaluation"
        shell: bash